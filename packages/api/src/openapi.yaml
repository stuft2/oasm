openapi: 3.0.3
info:
  version: 1.0.0
  title: OpenAPI Specification Manager
  license:
    name: 'Apache-2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0.txt'
  description: An OpenAPI Specification Manager for discovering and versioning OpenAPI
    documents across an organization.
  contact:
    name: Spencer Tuft
    email: spencer.tuft@gmail.com
paths:
  "/accounts":
    x-controller: accounts
    post:
      summary: create an account
      description: create an account
      operationId: createAccount
      x-operation: createAccount
      tags:
        - Accounts
      responses:
        201:
          description: created a resource
          headers:
            location:
              description: the location of the resource
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/account'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  "/accounts/:accountId":
    x-controller: accounts
    get:
      summary: get account information
      description: get account information
      operationId: getAccountInfo
      x-operation: getAccountInfo
      tags:
        - Accounts
      responses:
        200:
          description: returns account information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/account'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: update account information
      description: update account information
      operationId: updateAccountInfo
      x-operation: updateAccountInfo
      tags:
        - Accounts
      responses:
        200:
          description: returns the updated account information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/account'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: deactivate account
      description: deactivate account
      operationId: deactivateAccount
      x-operation: deactivateAccount
      tags:
        - Accounts
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  "/session":
    x-controller: session
    post:
      summary: login
      description: login
      operationId: login
      x-operation: login
      tags:
        - Auth
      responses:
        201:
          description: returns the authentication information
          headers:
            location:
              description: the location of the resource
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/session'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/accounts/:accountId/tokens":
    x-controller: accounts
    get:
      summary: list access tokens
      description: list access tokens
      operationId: listAccessTokens
      x-operation: listAccessTokens
      tags:
        - Accounts
      responses:
        200:
          description: returns the list of access tokens generated
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          $ref: '#/components/schemas/token'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: generate access token
      description: generate access token
      operationId: generateAccessTokens
      x-operation: generateAccessTokens
      tags:
        - Accounts
      responses:
        201:
          description: returns the generated access token
          headers:
            location:
              description: the location of the resource
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - $ref: '#/components/schemas/token'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/accounts/:accountId/tokens/:tokenId":
    x-controller: accounts
    delete:
      summary: revoke access token
      description: revoke access token
      operationId: revokeAccessToken
      x-operation: revokeAccessToken
      tags:
        - Accounts
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  "/documents":
    x-controller: documents
    get:
      summary: list documents
      description: list documents
      operationId: listDocumentInfo
      x-operation: listDocumentInfo
      tags:
        - Documents
      responses:
        200:
          description: returns a list of documents
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          $ref: '#/components/schemas/document_info'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: create new document
      description: create a new document
      operationId: createDocument
      x-operation: createDocument
      tags:
        - Documents
      responses:
        201:
          description: create a new document
          headers:
            location:
              description: the location of the resource
              required: true
              schema:
                type: string
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  "/documents/:documentId/versions":
    x-controller: documents
    get:
      summary: list document history
      description: list document history
      operationId: listDocumentHistory
      x-operation: listDocumentHistory
      tags:
        - Documents
      responses:
        200:
          description: returns a list of documents
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          $ref: '#/components/schemas/document_info'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: create new version
      operationId: publishDocumentVersion
      x-operation: publishDocumentVersion
      tags:
        - Documents
      responses:
        201:
          description: returns the new version
          headers:
            location:
              description: the location of the resource
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/document'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/documents/:documentId/versions/:version":
    x-controller: documents
    get:
      summary: get document
      description: get document
      operationId: getDocument
      x-operation: getDocument
      tags:
        - Documents
      responses:
        200:
          description: returns the document
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/document'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/documents/:documentId/versions/:version/dependencies":
    x-controller: documents
    get:
      summary: list dependencies
      description: list dependencies
      operationId: listDependencies
      x-operation: listDependencies
      tags:
        - Documents
      responses:
        200:
          description: returns a list of documents that depend on this documents
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          $ref: '#/components/schemas/document_info'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/documents/:documentId/attributes":
    x-controller: documents
    get:
      summary: get document settings
      description: get document settings
      operationId: get
      x-operation: get-documents-:documentId-attributes
      tags:
        - Documents
      responses:
        200:
          description: returns the updated document settings
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          $ref: '#/components/schemas/attribute'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/documents/:documentId/attributes/:name":
    x-controller: documents
    put:
      summary: update document settings
      operationId: updateDocumentAttribute
      x-operation: updateDocumentAttribute
      tags:
        - Documents
      responses:
        200:
          description: returns the updated document settings
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - $ref: '#/components/schemas/attribute'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/documents/:documentId/maintainers":
    x-controller: documents
    get:
      summary: list maintainers
      description: list maintainers
      operationId: listDocumentMaintainers
      x-operation: listDocumentMaintainers
      tags:
        - Documents
      responses:
        200:
          description: returns a list of maintainers for a document
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/collection_metadata'
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          $ref: '#/components/schemas/maintainer'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: invite maintainer
      operationId: sendMaintainerInvite
      x-operation: sendMaintainerInvite
      tags:
        - Documents
      responses:
        202:
          description: Sends an invite to a user to be a document maintainer
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  "/document/:documentId/maintainers/:maintainerId":
    x-controller: documents
    put:
      summary: acknowledge maintainer invite
      description: acknowledge maintainer invite
      operationId: acknowledgeMaintainerInvite
      x-operation: acknowledgeMaintainerInvite
      tags:
        - Documents
      responses:
        200:
          description: updates the maintainer invite
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/simple_metadata'
                  - $ref: '#/components/schemas/maintainer'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: remove maintainer
      description: remove maintainer
      operationId: removeDocumentMaintainer
      x-operation: removeDocumentMaintainer
      tags:
        - Documents
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
components:
  schemas:
    collection_metadata:
      title: Collection Metadata
      type: object
      allOf:
        - $ref: '#/components/schemas/simple_metadata'
        - type: object
          properties:
            collection_size:
              type: number
            limit:
              type: number
            offset:
              type: number
    simple_metadata:
      title: Simple Metadata
      type: object
      properties:
        metadata:
          type: object
          properties:
            validation_response:
              $ref: '#/components/schemas/validation_response'
            validation_information:
              type: array
              items:
                type: string
    validation_response:
      title: Validation Response
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
    session:
      title: Session
      type: object
      properties:
        jwt:
          type: string
          readOnly: true
    account:
      title: Account
      type: object
      x-tags:
        - Accounts
        - Auth
      properties:
        id:
          type: string
          readOnly: true
        email:
          type: string
        password:
          type: string
          writeOnly: true
        surname:
          type: string
        givenName:
          type: string
    token:
      title: Token
      type: object
      x-tags:
        - Auth
      properties:
        id:
          type: string
          readOnly: true
        description:
          type: string
        token:
          type: string
          readOnly: true
        lastUsed:
          type: object
          readOnly: true
          properties:
            location:
              type: string
            datetime:
              type: string
              format: date-time
    document:
      $ref: https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/v3.0/schema.json
    document_info:
      $ref: https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/v3.0/schema.json#/definitions/Info
    attribute:
      title: Attribute
      type: object
      x-tags:
        - Documents
      properties:
        name:
          type: string
        description:
          type: string
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: integer
    maintainer:
      title: Maintainer
      type: object
      x-tags:
        - Documents
      properties:
        maintainerId:
          type: string
        role:
          type: string
          enum:
            - admin
            - write
            - read
  responses:
    204:
      description: there is not additional content to send
    400:
      description: the request body was malformatted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/simple_metadata'
    401:
      description: the requester was not authenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/simple_metadata'
    403:
      description: the requester was unauthorized to make the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/simple_metadata'
    404:
      description: the resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/simple_metadata'
    500:
      description: the server could not fulfill the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/simple_metadata'
tags:
  - name: Accounts
  - name: Documents
  - name: Auth
